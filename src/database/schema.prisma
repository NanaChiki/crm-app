// This is your Prisma schema file

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

// フェーズ1: 基本モデル
model Customer {
    customerId    Int      @id @default(autoincrement()) @map("customer_id")
    companyName   String   @map("company_name")
    contactPerson String?  @map("contact_person")
    phone         String?
    email         String?
    address       String?
    notes         String?
    createdAt     DateTime @default(now()) @map("created_at")
    updatedAt     DateTime @updatedAt @map("updated_at")

    // リレーション
    serviceRecords ServiceRecord[]
    reminders      Reminder[]

    @@map("customers")
}

model ServiceRecord {
    recordId           Int      @id @default(autoincrement()) @map("record_id")
    customerId         Int      @map("customer_id")
    serviceDate        DateTime @map("service_date")
    serviceType        String?  @map("service_type")
    serviceDescription String?  @map("service_description")
    amount             Decimal?
    status             String   @default("completed")
    createdAt          DateTime @default(now()) @map("created_at")
    updatedAt          DateTime @updatedAt @map("updated_at")

    // リレーション
    customer  Customer   @relation(fields: [customerId], references: [customerId], onDelete: Cascade)
    reminders Reminder[]

    @@map("service_records")
}

// フェーズ2: リマインダーモデル
model Reminder {
    reminderId      Int       @id @default(autoincrement()) @map("reminder_id")
    customerId      Int       @map("customer_id")
    serviceRecordId Int?      @map("service_record_id")

    // リマインダー内容
    title        String   // 例: "外壁塗装メンテナンス推奨"
    message      String   // リマインダーメッセージ本文
    reminderDate DateTime @map("reminder_date")

    // 送信状態管理
    status String    @default("scheduled") // scheduled, sent, cancelled
    sentAt DateTime? @map("sent_at")

    // OutLook連携情報
    outlookEventId   String?  @map("outlook_event_id")
    outlookEmailSent Boolean  @default(false) @map("outlook_email_sent")

    // メタデータ
    createdBy String   @default("system") @map("created_by") // system or manual
    notes     String?
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    // リレーション
    customer      Customer       @relation(fields: [customerId], references: [customerId], onDelete: Cascade)
    serviceRecord ServiceRecord? @relation(fields: [serviceRecordId], references: [recordId], onDelete: SetNull)

    @@map("reminders")
}
